@model IEnumerable<SalesWebMvc.Models.Funcionarios>

@{
    ViewData["Title"] = "Funcionários";
    var searchString = ViewData["CurrentFilter"] as string;
    var errorMessage = ViewData["ErrorMessage"] as string;
}

<h1>Funcionários</h1>

<!-- Formulário de pesquisa -->
<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Buscar por Nome" value="@searchString" />
        <button type="submit" class="btn btn-success">Buscar</button>
    </div>
</form>

<!-- Exibe mensagem de erro se houver -->
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<!-- Botão para criar um novo funcionário -->
<a asp-action="Create" class="btn btn-success">Criar Funcionário</a>

<br />
<br />

<table class="table">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th>
                Salário
            </th>
            <th>
                Data de Contrato
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateContract)
                </td>
                <td>
                    <!-- Botão de Deletar -->
                    <form asp-action="Delete" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@item.Id" />
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Tem certeza de que deseja excluir este funcionário?');">Deletar</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
